---
// ThemeToggle.astro
// This component provides a basic theme toggle functionality using client-side JavaScript.

// We will use localStorage to persist the theme and apply it immediately on page load.
// The script is inline to prevent FOUC (Flash Of Unstyled Content) and ensure theme is applied synchronously.
---

<div class="flex flex-col justify-center">
    <input
        type="checkbox"
        name="light-switch"
        id="light-switch"
        class="light-switch sr-only"
    />
    <label class="cursor-pointer" for="light-switch">
        <!-- Sun Icon (for light mode) -->
        <svg
            id="theme-icon-sun"
            class="w-6 h-6"
            style="display: none;"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
        >
            <circle cx="12" cy="12" r="4"></circle><path d="M12 2v2"
            ></path><path d="M12 20v2"></path><path d="M4.93 4.93l1.41 1.41"
            ></path><path d="M17.67 17.67l1.41 1.41"></path><path d="M2 12h2"
            ></path><path d="M20 12h2"></path><path d="M4.93 19.07l1.41-1.41"
            ></path><path d="M17.67 6.33l1.41-1.41"></path>
        </svg>
        <!-- Moon Icon (for dark mode) -->
        <svg
            id="theme-icon-moon"
            class="w-6 h-6"
            style="display: none;"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
        >
            <path d="M12 3a6.364 6.364 0 0 0 9 9 9 9 0 1 1-9-9Z"></path>
        </svg>
        <span class="sr-only">Switch to light / dark version</span>
    </label>
</div>

<script is:inline>
    const lightSwitch = document.getElementById("light-switch");
    const sunIcon = document.getElementById("theme-icon-sun");
    const moonIcon = document.getElementById("theme-icon-moon");

    // Function to apply the theme
    function applyTheme(theme) {
        if (theme === "dark") {
            document.documentElement.classList.add("dark");
            document.documentElement.setAttribute(
                "data-joy-color-scheme",
                "dark",
            ); // For Tailwind/DaisyUI light mode
            document.documentElement.setAttribute("data-theme", "dark"); // For Tailwind/DaisyUI dark mode
            if (lightSwitch) lightSwitch.checked = false; // Ensure checkbox reflects dark mode
            if (moonIcon) moonIcon.style.display = "block";
            if (sunIcon) sunIcon.style.display = "none";
        } else {
            document.documentElement.classList.remove("dark");
            document.documentElement.setAttribute("data-theme", "light"); // For Tailwind/DaisyUI light mode
            document.documentElement.setAttribute(
                "data-joy-color-scheme",
                "light",
            ); // For Tailwind/DaisyUI light mode
            if (lightSwitch) lightSwitch.checked = true; // Ensure checkbox reflects light mode
            if (moonIcon) moonIcon.style.display = "none";
            if (sunIcon) sunIcon.style.display = "block";
        }
    }

    // Check for saved theme in localStorage
    const savedTheme = localStorage.getItem("theme");
    const prefersDark = window.matchMedia(
        "(prefers-color-scheme: dark)",
    ).matches;
    let currentTheme = savedTheme || (prefersDark ? "dark" : "light");

    // Apply the theme immediately
    applyTheme(currentTheme);

    // Add event listener for toggling theme
    if (lightSwitch) {
        lightSwitch.addEventListener("change", (event) => {
            const newTheme = event.target.checked ? "light" : "dark";
            localStorage.setItem("theme", newTheme);
            applyTheme(newTheme);
        });
    }
</script>
